syntax = "proto3";

package filesystem;

option go_package = "./pkg/generated/filesystem;filesystem";

message File {
    string name = 1;
    string path = 2;
    bytes data = 3;
}

message UploadFilesystemResponse {
    string id = 1;
    int64 size = 2;
}

message DownloadRequest {
    string path = 1;
}

message ManifestRequest {
    string path = 1;
    bool recursive = 2;
}

message ManifestResponse {
    repeated FSEntry entries = 1;
}

message Directory {
    string name = 1;
    repeated FSEntry entries = 2;
}

message FileInfo {
    string name = 1;
}

message FSEntry {
    oneof value {
        FileInfo file = 1;
        Directory directory = 2;
    }
}

service StorageService {
    // Upload accepts files in chunks. Server expects file content to be streamed in order and consecutively.
    rpc Upload(stream File) returns (UploadFilesystemResponse);

    // Download streams files in chunks. Server produces file chunks in order and consecutively.
    rpc Download(DownloadRequest) returns (stream File);

    // GetManifest lists the contents of a remote folder.
    rpc GetManifest(ManifestRequest) returns (ManifestResponse);
}
